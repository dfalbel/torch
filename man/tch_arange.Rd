% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tensor.R
\name{tch_arange}
\alias{tch_arange}
\title{arange}
\usage{
tch_arange(start = 0, end = NULL, step = 1, out = NULL, dtype = NULL,
  layout = NULL, device = NULL, requires_grad = FALSE)
}
\arguments{
\item{start}{the starting value for the set of points}

\item{end}{the ending value for the set of points}

\item{step}{the gap between each pair of adjacent points}

\item{out}{(optional) the output tensor}

\item{dtype}{the desired data type of returned tensor. Default: if None, uses a global default (see torch.set_default_tensor_type()). If dtype is not given,
infer the data type from the other input arguments. If any of start, end, or stop are floating-point, the dtype is inferred to be the default dtype, see
get_default_dtype(). Otherwise, the dtype is inferred to be torch.int64.}

\item{layout}{the desired layout of returned Tensor}

\item{device}{the desired device of returned tensor. Default: if None, uses the current device for the default tensor type (see torch.set_default_tensor_type()).
device will be the CPU for CPU tensor types and the current CUDA device for CUDA tensor types}

\item{requires_grad}{boolean. If autograd should record operations on the returned tensor}
}
\description{
Returns a 1-D tensor of size \code{floor((end - start)/end)} with values from the interval [start, end) taken with common difference step beginning from start.
Note that non-integer step is subject to floating point rounding errors when comparing against end; to avoid inconsistency, we advise adding a small epsilon to
end in such cases.
}
\examples{
tch_arange(5)
tch_arange(1, 4)
tch_arange(1, 2.5, 0.5)

}
